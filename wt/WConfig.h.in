#ifndef WCONFIG_H
#define WCONFIG_H

// Version defines
#define WT_SERIES 0x${VERSION_SERIES}
#define WT_MAJOR  0x${VERSION_MAJOR}
#define WT_MINOR  0x${VERSION_MINOR}

/*! \brief A constant that encodes the library version of %Wt
 *
 * You may use this constant to check for the version of %Wt at build-time.
 */
#define WT_VERSION (((WT_SERIES & 0xff) << 24) | ((WT_MAJOR & 0xff) << 16) | ((WT_MINOR & 0xff) << 8))
#define WT_VERSION_STR "${VERSION_SERIES}.${VERSION_MAJOR}.${VERSION_MINOR}"
#define WT_CLASS       "Wt${VERSION_SERIES}_${VERSION_MAJOR}_${VERSION_MINOR}"

#define RUNDIR "${RUNDIR}"
#define WT_CONFIG_XML "${CONFIGURATION}"
#define WTHTTP_CONFIGURATION "${WTHTTP_CONFIGURATION}"

#cmakedefine WTHTTP_WITH_ZLIB

#cmakedefine WT_STATIC
#cmakedefine WTHTTP_STATIC
#cmakedefine WT_EXT_STATIC

#if ${WT_DEBUG_ENABLED}
#ifndef WT_TARGET_JAVA
  #define WT_DEBUG(statement) do { if (Wt::WApplication::instance()->debug()) statement; } while(0)
#else
  #define WT_DEBUG(statement)
#endif
#else
  #define WT_DEBUG(statement)
#endif

#endif

