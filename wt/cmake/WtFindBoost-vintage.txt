# This file sets:
# - BOOST_INCLUDE_DIRS
# - BOOST_LIB_DIRS
# - BOOST_WT_FOUND  // All dependencies for wt found
# - BOOST_WT_MT_FOUND
# - BOOST_WTHTTP_FOUND // All dependencies for wthttp found
# - BOOST_WTHTTP_MT_FOUND
# - BOOST_SUPPORT_LIBRARIES (should always be added to the boost libs)
#
# Separate compiled boost libraries are also discovered:
# - BOOST_DT_LIB
# - BOOST_FS_LIB
# - BOOST_REGEX_LIB
# - BOOST_PO_LIB
# - BOOST_SIGNALS_LIB
# - BOOST_SYSTEM_LIB
# - BOOST_THREAD_LIB (only if BOOST_MT_FOUND)
# Boost will try to find the same kind (mt or not) of library for all three
# of these libraries. Boost is considered to be found successfully only
# when the libraries are all of the same kind (mt or not). If the mt
# libraries exits, the mt versions will be used unless MULTI_THREADED is
# set to OFF. Otherwise, the non-mt versions will be used.

FIND_PATH(BOOST_INCLUDE_DIRS
    boost/lexical_cast.hpp
  PATHS
    ${BOOST_PREFIX}/include
    ${BOOST_PREFIX}/include/${BOOST_VERSION}
    ${BOOST_PREFIX}/include/boost-${BOOST_VERSION}
    ${BOOST_PREFIX}
  NO_DEFAULT_PATH
)

#SET (BOOST_LIB_DIRS "${BOOST_PREFIX}/lib ${BOOST_PREFIX}/lib64")
SET (BOOST_LIB_DIRS ${BOOST_PREFIX}/lib)

IF(MSVC)
# FIXME: write some TRY_COMPILEs here to verify that these libs exist
  SET(BOOST_SUPPORT_LIBRARIES "")
ELSE(MSVC)
  FIND_LIBRARY(BOOST_THREAD_LIB
    NAMES
      boost_thread-${BOOST_COMPILER}-mt-${BOOST_FLAGS}-${BOOST_VERSION}
      boost_thread-${BOOST_COMPILER}-mt-${BOOST_VERSION}
      boost_thread-${BOOST_COMPILER}-mt
      boost_thread-mt-${BOOST_VERSION}
      boost_thread-mt
      boost_thread-${BOOST_COMPILER}-${BOOST_VERSION}
      boost_thread-${BOOST_COMPILER}
      boost_thread-${BOOST_VERSION}
      boost_thread
    PATHS
      ${BOOST_LIB_DIRS}
    NO_DEFAULT_PATH
  )

  FIND_LIBRARY(BOOST_REGEX_LIB
    NAMES
      boost_regex-${BOOST_COMPILER}-mt-${BOOST_FLAGS}-${BOOST_VERSION}
      boost_regex-${BOOST_COMPILER}-mt-${BOOST_VERSION}
      boost_regex-${BOOST_COMPILER}-mt
      boost_regex-mt-${BOOST_VERSION}
      boost_regex-mt
      boost_regex-${BOOST_COMPILER}-${BOOST_VERSION}
      boost_regex-${BOOST_COMPILER}
      boost_regex-${BOOST_VERSION}
      boost_regex
    PATHS
      ${BOOST_LIB_DIRS}
    NO_DEFAULT_PATH
  )

  FIND_LIBRARY(BOOST_PO_LIB
    NAMES
      boost_program_options-${BOOST_COMPILER}-mt-${BOOST_FLAGS}-${BOOST_VERSION}
      boost_program_options-${BOOST_COMPILER}-mt-${BOOST_VERSION}
      boost_program_options-${BOOST_COMPILER}-mt
      boost_program_options-mt-${BOOST_VERSION}
      boost_program_options-mt
      boost_program_options-${BOOST_COMPILER}-${BOOST_VERSION}
      boost_program_options-${BOOST_COMPILER}
      boost_program_options-${BOOST_VERSION}
      boost_program_options
    PATHS
      ${BOOST_LIB_DIRS}
    NO_DEFAULT_PATH
  )

  FIND_LIBRARY(BOOST_DT_LIB
    NAMES
      boost_date_time-${BOOST_COMPILER}-mt-${BOOST_FLAGS}-${BOOST_VERSION}
      boost_date_time-${BOOST_COMPILER}-mt-${BOOST_VERSION}
      boost_date_time-${BOOST_COMPILER}-mt
      boost_date_time-mt-${BOOST_VERSION}
      boost_date_time-mt
      boost_date_time-${BOOST_COMPILER}-${BOOST_VERSION}
      boost_date_time-${BOOST_COMPILER}
      boost_date_time-${BOOST_VERSION}
      boost_date_time
    PATHS
      ${BOOST_LIB_DIRS}
    NO_DEFAULT_PATH
  )

  FIND_LIBRARY(BOOST_SIGNALS_LIB
    NAMES
      boost_signals-${BOOST_COMPILER}-mt-${BOOST_FLAGS}-${BOOST_VERSION}
      boost_signals-${BOOST_COMPILER}-mt-${BOOST_VERSION}
      boost_signals-${BOOST_COMPILER}-mt
      boost_signals-mt-${BOOST_VERSION}
      boost_signals-mt
      boost_signals-${BOOST_COMPILER}-${BOOST_VERSION}
      boost_signals-${BOOST_COMPILER}
      boost_signals-${BOOST_VERSION}
      boost_signals
    PATHS
      ${BOOST_LIB_DIRS}
    NO_DEFAULT_PATH
  )

  FIND_LIBRARY(BOOST_SYSTEM_LIB
    NAMES
      boost_system-${BOOST_COMPILER}-mt-${BOOST_FLAGS}-${BOOST_VERSION}
      boost_system-${BOOST_COMPILER}-mt-${BOOST_VERSION}
      boost_system-${BOOST_COMPILER}-mt
      boost_system-mt-${BOOST_VERSION}
      boost_system-mt
      boost_system-${BOOST_COMPILER}-${BOOST_VERSION}
      boost_system-${BOOST_COMPILER}
      boost_system-${BOOST_VERSION}
      boost_system
    PATHS
      ${BOOST_LIB_DIRS}
    NO_DEFAULT_PATH
  )

  FIND_LIBRARY(BOOST_FS_LIB
    NAMES
      boost_filesystem-${BOOST_COMPILER}-mt-${BOOST_FLAGS}-${BOOST_VERSION}
      boost_filesystem-${BOOST_COMPILER}-mt-${BOOST_VERSION}
      boost_filesystem-${BOOST_COMPILER}-mt
      boost_filesystem-mt-${BOOST_VERSION}
      boost_filesystem-mt
      boost_filesystem-${BOOST_COMPILER}-${BOOST_VERSION}
      boost_filesystem-${BOOST_COMPILER}
      boost_filesystem-${BOOST_VERSION}
      boost_filesystem
    PATHS
      ${BOOST_LIB_DIRS}
    NO_DEFAULT_PATH
  )

# FIXME: todo for Linux
  SET(RT_LIB "rt")
  SET(OTHER_LIBS "-lpthread")
  SET(BOOST_SUPPORT_LIBRARIES "")
ENDIF(MSVC)

SET(BOOST_WT_FOUND FALSE)
SET(BOOST_WT_MT_FOUND FALSE)
SET(BOOST_WTHTTP_FOUND FALSE)
SET(BOOST_WTHTTP_MT_FOUND FALSE)

IF(BOOST_INCLUDE_DIRS)
  IF(MSVC)
    # This is not really tested by this script yet - assume availability
    SET(BOOST_WT_MT_FOUND TRUE)
    SET(BOOST_WT_FOUND TRUE)
    SET(BOOST_WTHTTP_MT_FOUND TRUE)
    SET(BOOST_WTHTTP_FOUND TRUE)
    SET(BOOST_WT_LIBRARIES "")

    SET(BOOST_WT_THREAD_LIBRARY  "")
    SET(BOOST_WT_REGEX_LIBRARY   "")
    SET(BOOST_WT_SIGNALS_LIBRARY "")
    SET(BOOST_WT_DT_LIBRARY      "")
    SET(BOOST_WT_SYSTEM_LIBRARY  "")

    SET(BOOST_WTHTTP_THREAD_LIBRARY "")
    SET(BOOST_WTHTTP_FS_LIBRARY     "")
    SET(BOOST_WTHTTP_PO_LIBRARY     "")
    SET(BOOST_WTHTTP_DT_LIBRARY     "")
  ENDIF(MSVC)

  IF(NOT BOOST_WT_FOUND
     AND MULTI_THREADED
     AND BOOST_THREAD_LIB
     AND BOOST_REGEX_LIB
     AND BOOST_SIGNALS_LIB
     AND BOOST_SYSTEM_LIB
     AND BOOST_DT_LIB)

    SET(BOOST_WT_MT_FOUND TRUE)
    SET(BOOST_WT_FOUND TRUE)

    SET(BOOST_WT_LIBRARIES
        ${BOOST_THREAD_LIB}
        ${BOOST_REGEX_LIB}
        ${BOOST_SIGNALS_LIB}
        ${BOOST_SYSTEM_LIB}
        ${BOOST_DT_LIB})

    SET(BOOST_WT_THREAD_LIBRARY  ${BOOST_THREAD_LIB})
    SET(BOOST_WT_REGEX_LIBRARY   ${BOOST_REGEX_LIB})
    SET(BOOST_WT_SIGNALS_LIBRARY ${BOOST_SIGNALS_LIB})
    SET(BOOST_WT_SYSTEM_LIBRARY  ${BOOST_SYSTEM_LIB})
    SET(BOOST_WT_DT_LIBRARY      ${BOOST_DT_LIB})

  ENDIF(NOT BOOST_WT_FOUND
     AND MULTI_THREADED
     AND BOOST_THREAD_LIB
     AND BOOST_REGEX_LIB
     AND BOOST_SIGNALS_LIB
     AND BOOST_SYSTEM_LIB
     AND BOOST_DT_LIB)

  IF(NOT BOOST_WT_FOUND
     AND BOOST_REGEX_LIB
     AND BOOST_SIGNALS_LIB
     AND BOOST_SYSTEM_LIB
     AND BOOST_PO_LIB
     AND BOOST_DT_LIB)

    SET(BOOST_WT_MT_FOUND FALSE)
    SET(BOOST_WT_FOUND TRUE)

    SET(BOOST_WT_LIBRARIES
        ${BOOST_REGEX_LIB}
        ${BOOST_SIGNALS_LIB}
	${BOOST_SYSTEM_LIB}
        ${BOOST_DT_LIB})

    SET(BOOST_WT_REGEX_LIBRARY   ${BOOST_REGEX_LIB})
    SET(BOOST_WT_SIGNALS_LIBRARY ${BOOST_SIGNALS_LIB})
    SET(BOOST_WT_SYSTEM_LIBRARY  ${BOOST_SYSTEM_LIB})
    SET(BOOST_WT_DT_LIBRARY      ${BOOST_DT_LIB})

  ENDIF(NOT BOOST_WT_FOUND
     AND BOOST_REGEX_LIB
     AND BOOST_SIGNALS_LIB
     AND BOOST_SYSTEM_LIB
     AND BOOST_PO_LIB
     AND BOOST_DT_LIB)

  IF(NOT BOOST_WTHTTP_FOUND
     AND MULTI_THREADED
     AND BOOST_THREAD_LIB
     AND BOOST_FS_LIB
     AND BOOST_PO_LIB
     AND BOOST_DT_LIB)
    SET(BOOST_WTHTTP_MT_FOUND TRUE)
    SET(BOOST_WTHTTP_FOUND TRUE)

    SET(BOOST_WTHTTP_LIBRARIES
        ${BOOST_THREAD_LIB}
        ${BOOST_FS_LIB}
        ${BOOST_PO_LIB}
        ${BOOST_DT_LIB})

    SET(BOOST_WTHTTP_THREAD_LIBRARY ${BOOST_THREAD_LIB})
    SET(BOOST_WTHTTP_FS_LIBRARY     ${BOOST_FS_LIB})
    SET(BOOST_WTHTTP_PO_LIBRARY     ${BOOST_PO_LIB})
    SET(BOOST_WTHTTP_DT_LIBRARY     ${BOOST_DT_LIB})

  ENDIF(NOT BOOST_WTHTTP_FOUND
     AND MULTI_THREADED
     AND BOOST_THREAD_LIB
     AND BOOST_FS_LIB
     AND BOOST_PO_LIB
     AND BOOST_DT_LIB)

  IF(NOT BOOST_WTHTTP_FOUND
     AND BOOST_FS_LIB
     AND BOOST_PO_LIB
     AND BOOST_DT_LIB)

    SET(BOOST_WTHTTP_MT_FOUND FALSE)
    SET(BOOST_WTHTTP_FOUND TRUE)

    SET(BOOST_WTHTTP_LIBRARIES
        ${BOOST_FS_LIB}
        ${BOOST_PO_LIB}
        ${BOOST_DT_LIB})

    SET(BOOST_WTHTTP_FS_LIBRARY ${BOOST_FS_LIB})
    SET(BOOST_WTHTTP_PO_LIBRARY ${BOOST_PO_LIB})
    SET(BOOST_WTHTTP_DT_LIBRARY ${BOOST_DT_LIB})

  ENDIF(NOT BOOST_WTHTTP_FOUND
     AND BOOST_FS_LIB
     AND BOOST_PO_LIB
     AND BOOST_DT_LIB)

ENDIF(BOOST_INCLUDE_DIRS)
